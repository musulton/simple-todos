// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToDoScreen should return correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "flex": 1,
        "paddingTop": 10,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "#ffffff",
          "elevation": 3,
          "marginLeft": 20,
          "marginRight": 20,
          "shadowColor": "#000000",
          "shadowOffset": {
            "height": 3,
            "width": 3,
          },
          "shadowOpacity": 0.2,
          "shadowRadius": 3,
        }
      }
    >
      <TextInput
        onChangeText={[Function]}
        placeholder="What needs to be done?"
        placeholderTextColor="#CACACA"
        selectionColor="#666666"
        style={
          {
            "backgroundColor": "#ffffff",
            "height": 60,
            "paddingLeft": 10,
            "paddingRight": 10,
          }
        }
        value=""
      />
    </View>
    <View
      style={
        {
          "alignItems": "flex-end",
        }
      }
    >
      <View
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderColor": "rgba(0,0,0,.1)",
            "borderWidth": 1,
            "height": 50,
            "justifyContent": "center",
            "marginRight": 20,
            "marginTop": 15,
            "paddingLeft": 20,
            "paddingRight": 20,
            "width": 200,
          }
        }
      >
        <Text
          style={
            {
              "color": "#666666",
              "fontWeight": "600",
            }
          }
        >
          Submit
        </Text>
      </View>
    </View>
    <View
      style={
        {
          "flex": 1,
          "paddingTop": 10,
        }
      }
    >
      <RCTScrollView
        ListEmptyComponent={
          <EmptyState
            text="Data is still empty"
          />
        }
        contentContainerStyle={
          {
            "flex": 1,
          }
        }
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={[]}
        viewabilityConfigCallbackPairs={[]}
      >
        <View>
          <View
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              Data is still empty
            </Text>
          </View>
        </View>
      </RCTScrollView>
    </View>
    <View
      style={
        {
          "borderTopColor": "#dddddd",
          "borderTopWidth": 1,
          "flexDirection": "row",
          "height": 70,
        }
      }
    >
      <View
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            null,
            {
              "borderLeftColor": "#dddddd",
              "borderLeftWidth": 1,
            },
            null,
          ]
        }
      >
        <Text
          style={
            [
              {
                "color": "#777777",
                "fontSize": 16,
              },
              null,
            ]
          }
        >
          All
        </Text>
      </View>
      <View
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            null,
            {
              "borderLeftColor": "#dddddd",
              "borderLeftWidth": 1,
            },
            null,
          ]
        }
      >
        <Text
          style={
            [
              {
                "color": "#777777",
                "fontSize": 16,
              },
              null,
            ]
          }
        >
          Active
        </Text>
      </View>
      <View
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            null,
            {
              "borderLeftColor": "#dddddd",
              "borderLeftWidth": 1,
            },
            null,
          ]
        }
      >
        <Text
          style={
            [
              {
                "color": "#777777",
                "fontSize": 16,
              },
              null,
            ]
          }
        >
          Complete
        </Text>
      </View>
    </View>
  </View>
</View>
`;
